version: 2.1
orbs:
  node: circleci/node@5.1.0
jobs:
  # lint:
  #   executor: 
  #     name: node/default
  #   steps:
  #     - checkout
  #     - run: npm install
  #     - run: npm run lint
  # test:
  #   executor: 
  #     name: node/default
  #   steps:
  #     - checkout
  #     - run: npm install
  #     - run: npm run test
  # build:
  #   docker: 
  #     - image: cimg/node:20.3.1
  #   steps:
  #     - checkout
  #     - setup_remote_docker
    
  deliver-db:
    docker: 
        - image: cimg/node:20.3.1
    steps:
      - checkout
      - setup_remote_docker
      - run: docker build -f Dockerfile-db . -t domain314/conint_backend_db
      - run: docker login -u $DOCKER_USER -p $DOCKER_PASS
      - run: docker push domain314/conint_backend_db:latest
  deliver-app:
    docker: 
        - image: cimg/node:20.3.1
    steps:
      - checkout
      - setup_remote_docker
      - run: docker build -f Dockerfile-app . -t domain314/conint_backend
      - run: docker login -u $DOCKER_USER -p $DOCKER_PASS
      - run: docker push domain314/conint_backend:latest
  deploy:
    executor: 
      name: node/default
    steps:
      - checkout
      - add_ssh_keys:
            fingerprints:
              - "a3:2d:bc:05:10:95:66:f2:cb:a2:e7:5f:e5:df:58:8f" # replace with your key fingerprint
      - run:
          name: Deploy to AWS EC2
          command: |
            ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa_a32dbc05109566f2cba2e75fe5df588f ubuntu@ec2-44-195-229-139.compute-1.amazonaws.com '
            sudo docker stop conint_backend_db || true &&
            sudo docker rm conint_backend_db || true &&
            sudo docker pull domain314/conint_backend_db:latest && 
            sudo docker run --name conint_backend_db -p 3306:3306 -e MYSQL_ROOT_PASSWORD=$MYSQL_ROOT_PASSWORD -e MYSQL_DATABASE=$MYSQL_DATABASE -e MYSQL_USER=$MYSQL_USER -e MYSQL_PASSWORD=$MYSQL_PASSWORD domain314/conint_backend_db:latest && 
            sudo docker stop conint_backend_app || true &&
            sudo docker rm conint_backend_app || true &&
            sudo docker pull domain314/conint_backend:latest && 
            sudo docker run --name conint_backend_app -p 8080:8080 -e DB_DIALECT=$DB_DIALECT -e DB_USER=$DB_USER -e DB_PW=$DB_PW -e DB_HOST=$DB_HOST -e DB_NAME=$DB_NAME domain314/conint_backend:latest'

workflows:
  version: 2
  build-test-deliver-and-deploy:
    jobs:
      # - lint:
      #     filters:
      #       branches:
      #         only: main
      # - test:
      #     requires:
      #       - lint
      #     filters:
      #       branches:
      #         only: main
      # - build:
      #     requires:
      #       - test
      #     filters:
      #       branches:
      #         only: main
      - deliver-db:
          # requires:
            # - build
          filters:
            branches:
              only: main
      - deliver-app:
          # requires:
          #   - build
          filters:
            branches:
              only: main
      - deploy:
          requires:
            - deliver-db
            - deliver-app
          filters:
            branches:
              only: main
